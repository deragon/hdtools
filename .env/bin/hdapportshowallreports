#!/bin/bash

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2022 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.
# SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=$(dirname "${SCRIPT_PATH_ABS}")

MSG="
Starting a tab in the currently opened browser which will list all the
errors that have been reported from this machine (${HOSTNAME}).

Note that you will not have the permissions to actually see the details
of the errors; these permissions are left to the developers only.
"

usage()
{
  cat <<EOM
${MSG}

Usage:  ${SCRIPT_NAME} [-h]

  -h  Display this help text.
EOM
}

run()
{
  if (( DRYRUN )); then
    echo "DRYRUN:  $@"
  else
    $@
  fi
}

# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

DRYRUN=1
DEBUG=0

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "n:dezh" OPTCMD; do
  case "${OPTCMD}" in
    # "-" Does not work.  Commenting it until it is fixed or figured out
    # what is wrong with it.
    # In the 'while getopts' above, add "-:" to try this again one day.
    #
    # "-")
    #     # Long options here.
    #     case "${OPTARG}" in
    #       name=)
    #         val=${OPTARG#*=}
    #         NAME=${OPTARG%=$val}
    #     esac;;
    "n")    NAME="${OPTARG}";;
    "d")    DRYRUN=1;;  # Run in dry-run mode.
    "e")    DRYRUN=0;;  # Run in execute mode.
    "z")    DEBUG=1;;
    "h"|*)  usage; exit 1;;
  esac
done

# PROCESSING
# ────────────────────────────────────────────────────────────────────────────

# From:  https://askubuntu.com/questions/140379/how-can-i-track-a-bug-that-caused-a-crash-and-was-reported-via-apport-whoopsie
echo -e "${MSG}"
xdg-open https://errors.ubuntu.com/user/`sudo cat /var/lib/whoopsie/whoopsie-id`
