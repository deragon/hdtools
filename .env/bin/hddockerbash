#!/bin/bash -e

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2025 Hans Deragon - AGPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.  It is
# released under the GNU Affero General Public License which can be found at:
#
#     https://www.gnu.org/licenses/agpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.

usage()
{
  echo -e "
\e[1;37;42m SAFE \e[0m

Start a bash session with either the provide in the first docker container listed
with 'docker ps'.

Usage:  ${SCRIPT_NAME} [-h] [CONTAINER_ID]

  <CONTAINER_ID>  If provided, starts Bash session in stated container,
                  else start Bash session on the first container listed
                  by 'docker ps'.

  -r              Login as root instead of the default user.
  -h              Display this help text.
"
}



# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

USER_ROOT=0

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "rh" OPTCMD; do
  case "${OPTCMD}" in
    "r")    USER_ROOT=1;;
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if FILES in $@ have spaces,
                          # we separate FILES properly.

CONTAINER_ID_ARG="$1"


unset USER_PARAM
((USER_ROOT)) && USER_PARAM="--user 0"

# docker ps format documented at:
#
#    https://docs.docker.com/config/formatting/
#
# To find out what data can be printed, show all content as json:
# docker ps --format='{{json .}}'
for DATA in \
  "${CONTAINER_ID_ARG}|NULL" \
  "$(docker ps --format "{{.ID}}|{{.Names}}" | head -1)" \
; do

  ID="${DATA/\|*}"
  NAME="${DATA/*\|}"

  if [[ "${NAME}" == "NULL" ]]; then
    NAME="$(docker ps --filter "Id=${ID}" --format "{{.Names}}" )"
  fi
  if [[ ! -z "${ID}" ]]; then
    echo "Entering Docker container ${NAME} (${ID})".
    eval exec docker exec -it ${USER_PARAM} "${ID}" bash
  fi
done
