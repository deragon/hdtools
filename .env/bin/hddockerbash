#!/bin/bash -e

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2021 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.

usage()
{
  echo -e "
\e[1;37;42m SAFE \e[0m

Start a bash session with either the provide in the first docker container listed
with 'docker ps'.

Usage:  ${SCRIPT_NAME} [-h] [CONTAINER_ID]

   CONTAINER_ID]
  -h  Display this help text.
"
}



# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "h" OPTCMD; do
  case "${OPTCMD}" in
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if FILES in $@ have spaces,
                          # we separate FILES properly.

CONTAINER_ID_ARG="$1"


# docker ps format documented at:
#
#    https://docs.docker.com/config/formatting/
#
# To find out what data can be printed, show all content as json:
# docker ps --format='{{json .}}'
for DATA in \
  "${CONTAINER_ID_ARG}|NULL" \
  "$(docker ps --format "{{.ID}}|{{.Names}}" | head -1)" \
; do

  ID="${DATA/\|*}"
  NAME="${DATA/*\|}"

  if [[ "${NAME}" == "NULL" ]]; then
    NAME="$(docker ps --filter "Id=${ID}" --format "{{.Names}}" )"
  fi
  if [[ ! -z "${ID}" ]]; then
    echo "Entering Docker container ${NAME} (${ID})".
    exec docker exec -it "${ID}" bash
  fi
done
