#!/bin/bash
# Copyright 2000-2021 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS=`dirname $(readlink -f "${BASH_SOURCE[0]}")` # Fetch real directory, not symlink.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=`dirname "${SCRIPT_PATH_ABS}"`

containsElement () {
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
  return 1
}

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-z] [-n <nom>] [-h]
EOM
}

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "n:hz" OPTCMD; do
  case "${OPTCMD}" in
    "n")    NAME="${OPTARG}";;
    "z")    ZIP=1;;
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if entries in $@ have spaces,
                          # we separate entries properly.

# Running through remaining arguments
# for ARGUMENT in $@; do
# done

ERRORS=""

# if [ -z "${ENV}" ]; then
#   ERRORS="${ERRORS} - Environment must be provided.  Example: '-e acc'.\n"
# fi

if [ ! -z "${ERRORS}" ]; then
  echo -e "ERROR:  The following errors where detected.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted."
  exit 1
fi

TETHERING=( "Saturne" "Mercure" "Pluto" "Venus" )
set -x
CURRENT_CONNECTION=$(nmcli --terse --fields NAME connection show --active)
if containsElement "${CURRENT_CONNECTION}" "${TETHERING[@]}"; then
  echo "Connected to a tethering connection."

  CONNECTIONS_KNOWN=$(nmcli --terse --fields NAME connection show)
  SSIDS=$(nmcli --terse --fields SSID dev wifi list | sort -u)
  echo "${SSIDS}"
fi

# Useful commands not used here.
# sudo wpa_cli scan
# sudo wpa_cli list_networks
