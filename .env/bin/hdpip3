#!/bin/bash

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2021 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.

CMD="python3 -m pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org"

usage()
{
  echo -e "
\e[1;37;42m SAFE \e[0m

Install a Python 3 module as a user, trusting the source.

The actual command executed is:

  ${CMD} \$@

Usage:  ${SCRIPT_NAME} [-h] <python module to install>+ | -u

  -p  Upgrade pip instead of installing a module.
  -s  Install in system instead of user directory (--user)
  -h  Display this help text.
"
}



# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

UPGRADE_PIP=0
SYSTEM=0

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "psh" OPTCMD; do
  case "${OPTCMD}" in
    "p")    UPGRADE_PIP=1;;
    "s")    SYSTEM=1;;
    "h"|*)  usage; exit 1;;
  esac
done

(( ! SYSTEM )) && CMD="${CMD} --user"

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if ARGUMENTS in $@ have spaces,
                          # we separate ARGUMENTS properly.

ARGUMENTS=("$@") # If you want the number of elements of $@, use $#



# VALIDATION
# ════════════════════════════════════════════════════════════════════

ERRORS=""

if (( UPGRADE_PIP == 0 && ${#ARGUMENTS[*]} == 0 )); then
  ERRORS="${ERRORS} - You must provide at least one module to install.\n"
fi

if [ ! -z "${ERRORS}" ]; then
  echo -e "\e[1;37;41mERROR:\e[0m  The following errors where detected.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted."
  exit 1
fi



# PROCESSING
# ────────────────────────────────────────────────────────────────────────────

if (( UPGRADE_PIP )); then
  echo "Upgrading pip."
  eval "${CMD} pip"
else
  eval "${CMD} \$@"
fi
