#!/bin/bash
# Copyright 2000-2021 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.

usage()
{
  echo -e "
\e[1;37;42m SAFE \e[0m

Usage:  ${SCRIPT_NAME} -d <workspace number> [-h]
                       <egrep -E matching pattern for the windows title>

  -d  Workspace number to which windows must be moved to.  Start at 0.
      MANDATORY

  -h  Display this help text.
"
}


# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

unset WORKSPACE_NB
OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "d:h" OPTCMD; do
  case "${OPTCMD}" in
    "d")    WORKSPACE_NB="${OPTARG}";;
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if FILES in $@ have spaces,
                          # we separate FILES properly.

# VALIDATION
# ════════════════════════════════════════════════════════════════════

ERRORS=""

if (($# == 0)); then
  ERRORS="${ERRORS} - You must provide at least one extended regular expression argument to match a title.\n"
fi

if [ -z "${WORKSPACE_NB}" ]; then
  ERRORS="${ERRORS} - Workspace number must be provided with '-d' argument.  Workspace numbers start at 0.\n"
fi

if [ ! -z "${ERRORS}" ]; then
  echo -e "\e[1;37;41mERROR:\e[0m  The following errors where detected.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted."
  exit 1
fi


# PROCESSING
# ────────────────────────────────────────────────────────────────────────────

WINDOW_INFOS=($(wmctrl -l | egrep --extended-regexp "$@"))

# Running through remaining arguments
for WINDOW_INFO in ${WINDOW_INFOS[@]}; do

  IFS=" " read -ra WINDOW_ARRAY <<< "${WINDOW_INFO}"
  WINDOW_ID="${WINDOW_ARRAY[0]}"
  WINDOW_TITLE="${WINDOW_ARRAY[@]:3}"
  echo "Moving to Workspace #{WORKSPACE_NB}:  ${WINDOW_ID} '${WINDOW_TITLE}'"
  wmctrl -i -r "${WINDOW_ID}" -t "${WORKSPACE_NB}"

done
