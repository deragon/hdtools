#!/bin/bash

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2024 Hans Deragon - AGPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.  It is
# released under the GNU Affero General public Picense which can be found at:
#
#     https://www.gnu.org/licenses/agpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.
# SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=$(dirname "${SCRIPT_PATH_ABS}")

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-t <target directory>] [-d] [-e] [-h] <'part' file to decompress'>+

  -t  <target directory>  If not provide, it is the same path where the
                          compressed file resides.
  -h                      Display this help text.
EOM
}

# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

DRYRUN=1
unset TARGET_DIR

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "t:h" OPTCMD; do
  case "${OPTCMD}" in
    "t")    TARGET_DIR="${OPTARG}";;
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if FILES in $@ have spaces,
                          # we separate FILES properly.

FILES=("$@") # If you want the number of elements of $@, use $#

# COMMANDLINE VALIDATION
# ════════════════════════════════════════════════════════════════════

ERRORS=""

if ((${#FILES[*]} == 0)); then
  ERRORS="${ERRORS} - You must provide at least one file to deflate.\n"
fi

if [ ! -z "${ERRORS}" ]; then
  echo -e "ERROR:  The following errors where detected.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted."
  exit 1
fi

# TIMESTAMP_FILE=$(date +"%Y%m%dT%H%M%S") # ISO 8601 format.
# TIMESTAMP_START=$(date +"%s") # Seconds since epoch.
# TIMESTAMP_FORMAT_HUMAN="%Y-%m-%d %H:%M:%S %N"

# PROCESSING
# ════════════════════════════════════════════════════════════════════

# Running through remaining arguments
for FILE in ${FILES[@]}; do

  if [ -z "${TARGET_DIR}" ]; then
    TARGET_FILE="${FILE/.deflate}"
  else
    TARGET_FILE="${FILE/*\/}" # Basename, efficient form.
    TARGET_FILE="${TARGET_DIR}/${TARGET_FILE/.deflate}"
  fi

  echo -en "Decompressing with ZLib '${FILE}'"

  # From:  https://unix.stackexchange.com/questions/22834/how-to-uncompress-zlib-data-in-unix
  openssl zlib -d <"${FILE}" >"${TARGET_FILE}"

  echo -e "\rFile decompressed:  '${TARGET_FILE}'           "

done
