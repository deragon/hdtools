#!/bin/bash

# Copyright 2000-2021 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")") # Fetch real directory, not symlink.  Spaces are well handled.
# SCRIPT_PATH_ABS=$(cd $(dirname $(ls -l "${SCRIPT_NAME}" | awk '{print$NF}')); pwd) # Equivalent of 'readlink -f', not available on AIX.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=$(dirname "${SCRIPT_PATH_ABS}")

LOGS_DIR="${HOME}/yarn/logs"

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-h] <Yarn application id OR Oozie job action id>

Gater all Yarn logs related to a Yarn application id or Oozie job action id.
Ids follow the following formats:  application_* or job_*

Logs are saved under:  ${LOGS_DIR}
The logs directory is created automatically if absent.

Example of usage:

  ${SCRIPT_NAME} application_1567164094225_0022

  -h  Show this help text.
EOM
}

# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "h" OPTCMD; do
  case "${OPTCMD}" in
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if FILES in $@ have spaces,
                          # we separate FILES properly.

YARN_ID="${1}"

# COMMANDLINE VALIDATION
# ════════════════════════════════════════════════════════════════════

ERRORS=""

if [ -z "${YARN_ID}" ]; then
  ERRORS="${ERRORS} - You have to provide an application-id.\n"
fi

if [ ! -z "${ERRORS}" ]; then
  echo -e "\e[1;37;41mERROR:\e[0m  The following errors where detected.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted."
  exit 1
fi

# PROCESSING
# ════════════════════════════════════════════════════════════════════

YARN_ID="application_${YARN_ID#*_}"

set -e
mkdir -p "${LOGS_DIR}"
# --size_limit_mb -1 == No limit to log size.
yarn logs -applicationId "${YARN_ID}" --size_limit_mb -1 >"${LOGS_DIR}/${YARN_ID}.log"

#cat "${LOGS_DIR}/${YARN_ID}.log"
cat <<EOM

Fichiers de sortie:  ${LOGS_DIR}/${YARN_ID}.log

vim '${LOGS_DIR}/${YARN_ID}.log'
cat '${LOGS_DIR}/${YARN_ID}.log'
tail -n 30 '${LOGS_DIR}/${YARN_ID}.log'
hderrorchecker       '${LOGS_DIR}/${YARN_ID}.log'
hderrorchecker -s    '${LOGS_DIR}/${YARN_ID}.log'
hderrorchecker -s -c '${LOGS_DIR}/${YARN_ID}.log'
EOM
