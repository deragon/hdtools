#!/bin/bash

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2022 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

# From http://www.michael-noll.com/blog/2013/03/17/reading-and-writing-avro-files-from-the-command-line

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=`dirname "${SCRIPT_PATH_ABS}"`

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-p] <data.avro> <data.json>

  data.avro        Avro file containing the data.
  data.json        Filename used to generate the avro file.

  -p               Pretty the output

  HD_AVRO_JAR environment variable must be defined, pointing to the Avro jar
  file (avro-tools-*.jar)
EOM
}

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
PRETTY=0
while getopts "ph" OPTCMD; do
  case "${OPTCMD}" in
    "p")    PRETTY=1;;
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if entries in $@ have spaces,
                          # we separate entries properly.
AVRO="$1"
JSON="$2"

[ -z "${JSON}" ] && JSON="${AVRO##.avro}.json"

if [[ "${HD_OS_FAMILY}" =~ "Cygwin" ]]; then
  AVRO=$(cygpath -w "${AVRO}")
  HD_AVRO_JAR=$(cygpath -w "${HD_AVRO_JAR}")

  # Parfois utilisé par Avro-Tools.  Il faut qu'il soit converti en
  # format Windows pour Java.
  [ ! -z "${HADOOP_HOME}" ] && HADOOP_HOME=$(cygpath -w "${HADOOP_HOME}")
fi

ERRORS=""

if [ -z "${HD_AVRO_JAR}" ]; then
  ERRORS="${ERRORS} - HD_AVRO_JAR environment variable must be defined, pointing to the Avro jar file (avro-tools-*.jar)\n"
fi

if (( $# < 1 )); then
  ERRORS="${ERRORS} - The number of arguments is not valid.\n"
fi

if [ ! -z "${ERRORS}" ]; then
  echo -e "ERROR:  The following errors where detected.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted.\n"
  usage
  exit 1
fi

#set -x
# -Dlog4j.debug=true 
JSON_CONTENT=$(java -classpath "${HD_AVRO_JAR}" org.apache.avro.tool.Main tojson "${AVRO}")
#JSON_CONTENT=$(java -jar "${HD_AVRO_JAR}" tojson "${AVRO}")
set +x

if (( PRETTY )); then
  echo -e "${JSON_CONTENT}" | python -m json.tool >"${JSON}"
else
  echo -e "${JSON_CONTENT}" >"${JSON}"
fi
