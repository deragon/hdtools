#!/bin/bash

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2025 Hans Deragon - AGPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.  It is
# released under the GNU Affero General Public License which can be found at:
#
#     https://www.gnu.org/licenses/agpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=`dirname "${SCRIPT_PATH_ABS}"`

# Epoch, as returned by $(date +"%s") is always in timezone UTC.
# See:  https://en.wikipedia.org/wiki/Unix_time
EPOCH=$(date +"%s")

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-n] [-f] [-i] [-t] [-h]

  -e          Epoch format,    Example:  ${EPOCH}
  -n          Normal format,   Example:  ${HD_TIMESTAMP_FORMAT_HUMAN}
  -i | -f     ISO8661 format.  Example:  ${HD_TIMESTAMP_FORMAT_ISO8601}
  -t          Print current time in different timezones.
EOM
}



# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

SHOW_ISO8661=0
SHOW_NORMAL=0
SHOW_EPOCH=0
TIMEZONES=0

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "enfiht" OPTCMD; do
  case "${OPTCMD}" in
    "e")        SHOW_EPOCH=1;;
    "n")        SHOW_NORMAL=1;;
    "f"|"i")    SHOW_ISO8661=1;;
    "t")        TIMEZONES=1;;
    "h"|*)  usage; exit 1;;
  esac
done

# Bitwise or appliqué ici.
if (( (${SHOW_EPOCH} | ${SHOW_NORMAL} | ${SHOW_ISO8661}) == 0 )); then
  SHOW_ISO8661=1
  SHOW_NORMAL=1
  SHOW_EPOCH=1
fi

unset HD_TIMESTAMP_NORMAL
unset HD_TIMESTAMP_ISO8661

(( ${SHOW_NORMAL} ))  && HD_TIMESTAMP_NORMAL=$( date -d "@${EPOCH}" +"${HD_TIMESTAMP_FORMAT_HUMAN}")
(( ${SHOW_ISO8661} )) && HD_TIMESTAMP_ISO8661=$(date -d "@${EPOCH}" +"${HD_TIMESTAMP_FORMAT_ISO8601}")

(( ${SHOW_NORMAL} )) && printf "${HD_TIMESTAMP_NORMAL}"
if (( ${SHOW_ISO8661} )); then
  (( ${SHOW_NORMAL} )) && printf " - "
  printf "${HD_TIMESTAMP_ISO8661}"
else
  printf "${HD_TIMESTAMP_ISO8661}"
fi

(( ( (${SHOW_NORMAL} | ${SHOW_ISO8661}) == 1 ) && ${SHOW_EPOCH} )) && printf " - "

# Epoch, as returned by $(date +"%s") is always in timezone UTC.
# See:  https://en.wikipedia.org/wiki/Unix_time
# This is why the string "UTC" is added when printing it, to remember the
# user that it is always UTC
(($SHOW_EPOCH)) && printf "${EPOCH} UTC"

if (( ${TIMEZONES} )); then
  echo -e "\n"
  TIMEZONES="LCL UTC EST America/Vancouver"
  for TIMEZONE in ${TIMEZONES}; do
    #echo -n "${TIMEZONE} time:  "
    printf "%- 20s  %s" "${TIMEZONE}:"
    if [ "${TIMEZONE}" = "LCL" ]; then
      echo $(date -d "@${EPOCH}" +"${HD_TIMESTAMP_FORMAT_HUMAN}") "-" \
           $(date -d "@${EPOCH}" +"${HD_TIMESTAMP_FORMAT_ISO8601}%z")
    else
      echo $(TZ="${TIMEZONE}" date -d "@${EPOCH}" +"${HD_TIMESTAMP_FORMAT_HUMAN}") "-" \
           $(TZ="${TIMEZONE}" date -d "@${EPOCH}" +"${HD_TIMESTAMP_FORMAT_ISO8601}%z")
    fi
  done
fi

echo
