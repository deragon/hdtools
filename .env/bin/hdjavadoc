#!/bin/bash

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2025 Hans Deragon - AGPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.  It is
# released under the GNU Affero General Public License which can be found at:
#
#     https://www.gnu.org/licenses/agpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=`dirname "${SCRIPT_PATH_ABS}"`

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-s <source directory | -t] [-h]

Creates a directory named 'javadoc' in this current directory and
generates all javadoc there.
EOM
}

SOURCE_DIR="src/main/java"

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "s:th" OPTCMD; do
  case "${OPTCMD}" in
    "s")    SOURCE_DIR="${OPTARG}";;
    "t")    SOURCE_DIR="src/test/java";;
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if entries in $@ have spaces,
                          # we separate entries properly.

ERRORS=""

if [ ! -d "${SOURCE_DIR}" ]; then
  ERRORS="${ERRORS} - Could not find '${SOURCE_DIR}'.\n"
fi

if [ ! -z "${ERRORS}" ]; then
  echo -e "ERROR:  The following errors where detected.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted."
  exit 1
fi

rm -rf javadoc
mkdir javadoc
cd javadoc

# From:  http://stackoverflow.com/questions/9993117/how-to-compile-javadoc-from-sources-in-simplest-way
# "." means all subpackages.
SUBPACKAGES="."
javadoc.exe -sourcepath "../${SOURCE_DIR}" -subpackages "${SUBPACKAGES}"

echo -e "\n./javadoc directory created."
