#!/bin/bash

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2022 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

# Works with symlinks and if the script is being sourced.
SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.

cat <<EOM

This script unzip ALL of the java doc found in the already downloaded local
maven repository, into the current directory:

  $(pwd)

If you need to download some specific javadoc, you can use:  hdmvndocdownload

EOM

echo -en "Do you wish to proceed (Y/N)? "
read -n 1 ANSWER
#ANSWER=y

DST="."

case "${ANSWER}" in
  y|Y)
    echo -e "\n\nProcessing..."
    ;;
  *)
    echo -e "\n\nCommand aborted."
    exit 0
    ;;
esac

#for JAVADOC in `locate -r '.m2/repository/.*javadoc.jar$'`; do
for JAVADOC in `find "${HOME}/.m2/repository" -name "*javadoc.jar"`; do
  BASEDIR="${JAVADOC/.m2\/repository\/*}.m2/repository"
  ENDPATH="${JAVADOC/*.m2\/repository\/}"
  ENDDIR=`dirname "${ENDPATH}"`

  #echo "BASEDIR=${BASEDIR}"
  #echo "ENDPATH=${ENDPATH}"
  #echo "ENDDIR=${ENDDIR}"
  
  mkdir -p "${ENDDIR}"
  \cd "${ENDDIR}" >/dev/null

  MSG="Processing ${ENDDIR}"

  # Since the user can dynamically change the size of the terminal at any
  # time, it is preferrable to fetch the current COLUMNS size each
  # time we are about to erase.  It works well when the windows is
  # resized larger, but there is a bug is it is resized smaller.
  let SPACES=`tput cols`-${#MSG}

  # Print message, followed by spaces required to erase the rest of
  # the line.
  printf "\r%s% ${SPACES}s" "${MSG}" ""

  # Testing file size.  Sometimes the download fails and the javadoc archive
  # has zero bytes.  We then need to delete the file.
  FILESIZE=`stat --printf="%s" "${JAVADOC}"`
  if (( FILESIZE == 0 )); then
    echo "File has 0 bytes.  Deleting ${JAVADOC}"
    rm -f "${JAVADOC}"
    continue
  fi

  # -n == Never overwrite a file.  Speeds up updates.
  unzip -qn "${JAVADOC}"
  cd - >/dev/null
done

echo -e "\n\nFinished."
