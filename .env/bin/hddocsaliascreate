#!/usr/bin/env python3

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2022 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

import os.path
import re

import argparse
from argparse import RawTextHelpFormatter

from pathlib import Path

# PARSING ARGUMENTS
# ────────────────────────────────────────────────────────────────────────────

parser = argparse.ArgumentParser(description="""
Generate aliases prefixed with 'hdd' for any text document found under
${HDENVDIR}/docs.

Running this is safe as it only outputs on stdout.  To render this script
useful, you must call it this way:

    eval $(hddocsaliascreate)

""", formatter_class=RawTextHelpFormatter)

args = parser.parse_args()


# MAIN
# ────────────────────────────────────────────────────────────────────────────

pattern = re.compile(".*\.(txt|md)")

doc_dirs=os.path.join(os.environ["HDENVDIR"], "docs")

index=0
for root, dirs, files in os.walk(doc_dirs):
    #print("root="  + str(root))
    #print("dirs="  + str(dirs))
    #print("files=" + str(files))

    numberoffiles = len(files)

    for file in files:
        matches = pattern.match(file)
        if matches != None:
            file_basename=os.path.basename(file)
            fullpath=os.path.join(root, file)

            # Path.stem() removes the extension.
            alias_name=Path(re.sub('[^\w|\.|\-|+|=]', '¤', file_basename, flags=re.IGNORECASE)).stem

            print("alias hdd" + alias_name + "='hdgvim \"" + fullpath + "\"';")

print("""
alias hddbashtemplate='hdgvim "${HDENVDIR}/bin/hd-create-script-template.sh"';
alias hddpythontemplate='hdgvim "${HDENVDIR}/bin/hd-create-script-template.py"';
""")
