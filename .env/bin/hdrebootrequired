#!/bin/bash
# Copyright 2000-2021 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS=`dirname $(readlink -f "${BASH_SOURCE[0]}")` # Fetch real directory, not symlink.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=`dirname "${SCRIPT_PATH_ABS}"`

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-z] [-n <nom>] [-h]
EOM
}

SILENCE=0

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "hs" OPTCMD; do
  case "${OPTCMD}" in
    "n")    NAME="${OPTARG}";;
    "s")    SILENCE=1;;
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if entries in $@ have spaces,
                          # we separate entries properly.

ERRORS=""

# if [ -z "${ENV}" ]; then
#   ERRORS="${ERRORS} - Environment must be provided.  Example: '-e acc'.\n"
# fi
#
# if [ ! -z "${ERRORS}" ]; then
#   echo -e "ERROR:  The following errors where detected.\n"
#   echo -e "${ERRORS}"
#   echo -e "Command aborted."
#   exit 1
# fi

if [ -e /var/run/reboot-required ]; then
  if (( ! ${SILENCE} )); then
    echo "Reboot required."
  fi
  exit 0
fi

if (( ! ${SILENCE} )); then
  echo "No reboot required."
fi
exit 1
