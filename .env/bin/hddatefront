#!/bin/bash
# Copyright 2000-2021 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")") # Fetch real directory, not symlink.  Spaces are well handled.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=`dirname "${SCRIPT_PATH_ABS}"`

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-e] [-h]

  -e  Execute.  Default is run in dry-mode.

This script renames files by moving any date found in the filename, in
ISO 8601 format (YYYY-MM-DD) to the front of the filename.

SAFE:  Dry-run mode is executed by default.
EOM
}



# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

DRYRUN="-d"

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "eh" OPTCMD; do
  case "${OPTCMD}" in
    "e")    DRYRUN="";;  # Run in execute mode.
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if FILES in $@ have spaces,
                          # we separate FILES properly.

FILES=("$@") # If you want the number of elements of $@, use $#

# COMMANDLINE VALIDATION
# ════════════════════════════════════════════════════════════════════

ERRORS=""

if ((${#FILES[*]} == 0)); then
  ERRORS="${ERRORS} - You must provide at least one argument.\n"
fi

if [ ! -z "${ERRORS}" ]; then
  echo -e "ERROR:  The following errors where detected.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted."
  exit 1
fi

# PROCESSING
# ════════════════════════════════════════════════════════════════════

renamefiles ${DRYRUN} -r '(.*?)(\d\d\d\d-\d\d-\d\d)\s*-\s*(.*)' '\2 - \1\3' "${FILES[@]}"
