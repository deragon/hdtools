#!/bin/bash

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2023 Hans Deragon - GPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.
#
# It is released under the GPL 3 licence which can be found at:
#
#     https://www.gnu.org/licenses/gpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.
# SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=$(dirname "${SCRIPT_PATH_ABS}")

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-h]

  -h  Display this help text.
EOM
}

# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "h" OPTCMD; do
  case "${OPTCMD}" in
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if FILES in $@ have spaces,
                          # we separate FILES properly.

FILES=("$@") # If you want the number of elements of $@, use $#

# COMMANDLINE VALIDATION
# ════════════════════════════════════════════════════════════════════

ERRORS=""

# if ((${#FILES[*]} == 0)); then
#   ERRORS="${ERRORS} - You must provide at least one argument.\n"
# fi
#
# if [ -z "${ENV}" ]; then
#   ERRORS="${ERRORS} - Environment must be provided.  Example: '-e acc'.\n"
# fi
#
if [ ! -z "${ERRORS}" ]; then
  echo -e "\e[1;37;41mERROR:\e[0m  The following errors where detected.\n"
  echo -e "\e[1;37;41mERREUR:\e[0m  Les erreurs suivantes furent détectées.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted."
  echo -e "Commande avortée."
  exit 1
fi

TIMESTAMP_FILE=$(date +"%Y%m%dT%H%M%S") # ISO 8601 format.
TIMESTAMP_START=$(date +"%s") # Seconds since epoch.
TIMESTAMP_FORMAT_HUMAN="%Y-%m-%d %H:%M:%S"

# PROCESSING
# ────────────────────────────────────────────────────────────────────────────

cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
date +"${TIMESTAMP_FORMAT_HUMAN}"
