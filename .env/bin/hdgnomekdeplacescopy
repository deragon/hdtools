#!/bin/bash

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2024 Hans Deragon - AGPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.  It is
# released under the GNU Affero General public Picense which can be found at:
#
#     https://www.gnu.org/licenses/agpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.
# SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=$(dirname "${SCRIPT_PATH_ABS}")

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-d] [-e] [-z] [-n <nom>] [-h]

  -d  Dry-run.
  -e  Execute command.  Default is dry-run.
  -e  Exécute la commande.  Le défault est 'dry-run'.
  -z  Debug logs enabled.
  -z  Traces de débuggage activées.
  -h  Display this help text.
  -h  Affiche ce texte d'aide.
EOM
}

run()
{
  if (( DRYRUN )); then
    echo "DRYRUN:  $@"
  else
    $@
  fi
}

# ARGUMENT PARSING
# ════════════════════════════════════════════════════════════════════

DRYRUN=1

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "deh" OPTCMD; do
  case "${OPTCMD}" in
    "d")    DRYRUN=1;;  # Run in dry-run mode.
    "e")    DRYRUN=0;;  # Run in execute mode.
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if FILES in $@ have spaces,
                          # we separate FILES properly.

FILES=("$@") # If you want the number of elements of $@, use $#



# VALIDATION
# ════════════════════════════════════════════════════════════════════

ERRORS=""

if [ ! -z "${ERRORS}" ]; then
  echo -e "\e[1;37;41mERROR:\e[0m  The following errors where detected.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted."
  exit 1
fi

unset NEW_BOOKMARK
for BOOKMARK in $(cat ~/.config/gtk-3.0/bookmarks); do
  NEW_BOOKMARK="${NEW_BOOKMARK}$(printf '\n<bookmark href="%s"> <title>%s</title> </bookmark>' "${BOOKMARK}" $(basename $(echo "${BOOKMARK}" | sed -e 's/file\:\/\///g')))"
done


# DRY RUN / EXECUTION WARNING
# ════════════════════════════════════════════════════════════════════
echo
if (( DRYRUN )); then
  echo -e "${NEW_BOOKMARK}"
  echo -en "\e[1;37;44mCommand was executed in dry mode; nothing was executed.\nRerun with -e to execute the action. \e[0;00m"
else
  run echo "${HOME}/.local/share/user-places.xbel"
  echo -en "\e[1;37;42mCommand was executed."
fi
echo -e "\e[0;00m"
