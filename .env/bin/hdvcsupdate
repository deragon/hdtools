#!/bin/bash -e

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2025 Hans Deragon - AGPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.  It is
# released under the GNU Affero General Public License which can be found at:
#
#     https://www.gnu.org/licenses/agpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${0/*\/}"

usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-h]

Updates all directories under VCS (Git, SVN, etc...) found under the current directory.

More specifically, recursively goes through all directories under the current
one and check for a .svn, .git, etc... directory.  If one found, it calls the
proper vcs command to update it and stops the recursion.
EOM
}

while getopts "n:hz" OPTCMD; do
  case "${OPTCMD}" in
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if entries in $@ have spaces,
                          # we separate entries properly.

# title()
# ────────────────────────────────────────────────────────────────────────────
#
#  call:  title "Test #1"
#  stdout:  ═ Test #1 2020-02-21 11:22:51 ════════════════════════════════
title()
{
  local LINE="═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════"
  local TITLE="${1}"
  local SEPARATOR=$(printf "%s %s %s\n" "${LINE:1:1}" "${TITLE}" "${LINE:${#TITLE}}")
  echo -e "\e[1;32m${SEPARATOR}\e[0;37m" # Green
}

vcsupdate()
{
  for ENTRY in $@; do
    if [ ! -d "${ENTRY}" ]            ||
       [[ "${ENTRY}" =~ "ignore"   ]] ||
       [[ "${ENTRY}" =~ "todel"    ]] ||
       [[ "${ENTRY}" =~ "tmp"      ]] ||
       [[ "${ENTRY}" =~ "musée"    ]] ||
       [[ "${ENTRY}" =~ "museum"   ]] ||
       [[ "${ENTRY}" =~ "obsolete" ]]; then
      continue
    fi

    # ENTRY at this point is a directory.  Now checking
    # if that directory is a repository and if so, update it.
    if [ -z "${ENTRY/*archive*/}" ]; then
      echo "Skipping archive directory:  ${ENTRY}"
      continue
    elif [ -d "${ENTRY}/.svn" ]; then
      echo "SVN update \"${ENTRY}\""
      svn update "${ENTRY}"
    elif [ -e "${ENTRY}/.git" ]; then
      cd "${ENTRY}"
      TITLE=$(printf "Git pull for %-32s on branch:  $(git status --branch --short | perl -ne 'print if s/^## //g')" "${ENTRY/.\//}")
      set +e
      GIT_URL="$(hdgurl | sed -nr 's/.*origin:\s+(.+)/\1/gp')"
      set +e
      title "${TITLE} - ${GIT_URL}"
      echo
      git pull --all | sed 's/^/  /g'  # Indent output with two spaces.
      echo
      cd - >/dev/null
    else
      vcsupdate "${ENTRY}"/*
    fi
  done
}

vcsupdate .
