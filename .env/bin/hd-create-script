#!/bin/bash

# ─ Copyright Notice ───────────────────────────────────────────────────
#
# Copyright 2000-2025 Hans Deragon - AGPL 3.0 licence.
#
# Hans Deragon (hans@deragon.biz) owns the copyright of this work.  It is
# released under the GNU Affero General Public License which can be found at:
#
#     https://www.gnu.org/licenses/agpl-3.0.en.html
#
# ─────────────────────────────────────────────────── Copyright Notice ─

SCRIPT_NAME="${BASH_SOURCE[0]/*\/}" # Basename, efficient form.
SCRIPT_PATH_ABS="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" # Fetch real directory, not symlink.  Spaces are well handled.

SCRIPT_NAME_BASE="${SCRIPT_NAME/.sh}"
SCRIPT_NAMEANDPATH_ABS="${SCRIPT_PATH_ABS}/${SCRIPT_NAME}"
SCRIPT_PATH_ABS_PARENT=`dirname "${SCRIPT_PATH_ABS}"`

TYPE="sh"
usage()
{
  cat <<EOM
Usage:  ${SCRIPT_NAME} [-p | -b] <script name> [-h]

  -b   Bash script creation (default)
  -p   Python script creation
EOM
}

OPTIND=1 # Normally not required, except if the script is sourced.
         # Better be safe than sorry.
while getopts "bph" OPTCMD; do
  case "${OPTCMD}" in
    "b")  TYPE="sh";;
    "p")  TYPE="py";;
    "h"|*)  usage; exit 1;;
  esac
done

shift $((${OPTIND} - 1))  # Remove options from $@
IFS=$(echo -en "\n\b")    # Set IFS so if entries in $@ have spaces,
                          # we separate entries properly.

NEW_SCRIPT="$1"

ERRORS=""

if [ -z "${NEW_SCRIPT}" ]; then
  ERRORS="${ERRORS} - You must provide the name of the script to create.\n"
fi

if [ ! -z "${ERRORS}" ]; then
  echo -e "ERROR:  The following errors where detected.\n"
  echo -e "${ERRORS}"
  echo -e "Command aborted."
  exit 1
fi

cp "${SCRIPT_PATH_ABS}/${SCRIPT_NAME_BASE}-template.${TYPE}" "${NEW_SCRIPT}"
chmod +x "${NEW_SCRIPT}"
#echo "vim \"${NEW_SCRIPT}\""

if ! xset q &>/dev/null; then
  # No X server at.
  vim -u "${HDVIMRC}" "${NEW_SCRIPT}"
else
  gvim -u "${HDVIMRC}" "${NEW_SCRIPT}"
fi
