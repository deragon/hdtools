TERRAFORM - https://www.terraform.io/
══════════════════════════════════════════════════════════════════════════════

  Infrascture As Code (IAC)

  Terraform is a tool for building, changing, and versioning infrastructure
  safely and efficiently. Terraform can manage existing and popular service
  providers as well as custom in-house solutions.



COMMANDS
══════════════════════════════════════════════════════════════════════════════

  terraform apply
  terraform init
  terraform plan
  terraform refresh
  terraform workspace list
  terraform workspace select prod


  DESTROY
  ────────────────────────────────────────────────────────────────────────────

    Specific target (best, mostly safest strategy since usually, we do
    not want to delete all)

    export TARGET=""
    terraform.exe plan    -target "${TARGET}" -destroy .  # Preview, safe
    terraform.exe destroy -target "${TARGET}" .           # Destroy, unsafe


CONCATENATE GENERATED LIST
══════════════════════════════════════════════════════════════════════════════

  Concatenage a generated list of role names from a list of schemas with two
  role names directly.  concat() is used to merge multiple lists together.

  locals {

   roles = concat([for schema in var.SCHEMAS: snowflake_role.schemas["${schema}"].name],
   [ snowflake_role.role1.name,
     snowflake_role.role2.name,
     "ROLE2NAME" ] )
  }



█ ─ Copyright Notice ───────────────────────────────────────────────────
█
█ Copyright 2000-2024 Hans Deragon - AGPL 3.0 licence.
█
█ Hans Deragon (hans@deragon.biz) owns the copyright of this work.  It is
█ released under the GNU Affero General public Picense which can be found at:
█
█     https://www.gnu.org/licenses/agpl-3.0.en.html
█
█ ─────────────────────────────────────────────────── Copyright Notice ─
