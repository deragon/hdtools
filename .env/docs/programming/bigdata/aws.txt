AWS - AMAZON WEB SERVICES


AWS S3
══════════════════════════════════════════════════════════════════════════════

  MISCELLANEOUS
  ────────────────────────────────────────────────────────────────────────────

    - All S3 buckets of the world share the same namespace.  Thus, if one
      creates a S3 bucket named 'tmp' in their account, nobody
      else in the world can create a bucket name 'tmp' in their own account.

      This also holds true if you have different AWS accounts for your
      environments DEV, PRD, etc...

      As a good practice, you can addyour AWS account number as a suffix to
      the name to avoid any collision.  Example:  'tmp-123456789012'.



AWS CLI
══════════════════════════════════════════════════════════════════════════════


  aws s3 cp
  ────────────────────────────────────────────────────────────────────────────

    Copying from one s3 bucket to another s3 bucket
    ‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑

      - Does not involve any transfer locally to the machine where the
        'aws s3 cp' command was executed.

      - Tags found on the source object are preserved/copied to the
        destinationn object.



AWS CLOUDFORMATION
══════════════════════════════════════════════════════════════════════════════

  - Descriptions of resources must be a static String and never can be
    built from functions such as !Join or !Ref.

      https://stackoverflow.com/questions/39678784/validationerror-when-calling-the-createstack-operation-template-format-error


  - Understanding aws cloudformation !Sub syntax
      https://www.fischco.org/technica/2017/cloud-formation-sub/ 


  SHARE VARIABLES/VALUES BETWEEN CLOUDFORMATION STACKS
  ────────────────────────────────────────────────────────────────────────────

    From:  https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-systems-manager-parameter/

    Use SSM parameters in AWS Systems Manager Parameter Store to share values
    between CloudFormation stacks. An SSM parameter stores a value in one
    stack (stackA) that can be used by another stack (stackB).

    When you use an SSM parameter, there isn't a dependency between the two
    CloudFormation stacks. This is because the variable is stored in the AWS
    Systems Manager Parameter Store.



AWS CLOUDWATCH
══════════════════════════════════════════════════════════════════════════════

  Log format
  ────────────────────────────────────────────────────────────────────────────

    - If a log contains a JSON in a single line, the CloudWatch interface
      will render the json pretty and show it on multiple lines, easily

      Therefor, it is highly recommended to express logs as JSON.



AWS Lambda
══════════════════════════════════════════════════════════════════════════════

  Make Lambda access EC2 port through a VPC
  ────────────────────────────────────────────────────────────────────────────

    Best practice would be to assign your Lambda function to a different
    security group than the EC2 instance. No inbound rules needed in the
    Lambda function's security group.

    Confirmed to work.  -- Hans Deragon, 2022-05

    From:  https://stackoverflow.com/questions/59742001/make-lambda-access-ec2-port-through-a-vpc



COÛTS / COSTS
══════════════════════════════════════════════════════════════════════════════

  Good reads:
  ────────────────────────────────────────────────────────────────────────────

    - AWS Customers Rack Up Hefty Bills For Moving Data
      https://hardware.slashdot.org/story/19/10/23/0517258/aws-customers-rack-up-hefty-bills-for-moving-data


  T3 cheaper than T2
  ────────────────────────────────────────────────────────────────────────────

    - https://www.densify.com/articles/aws-ec2-t3-burstable-instances


  S3
  ────────────────────────────────────────────────────────────────────────────

    - Does not cost much to send data into S3.
    - COST A LOT to push the data out of S3 into your own server.

█ ─ Copyright Notice ───────────────────────────────────────────────────
█
█ Copyright 2000-2021 Hans Deragon - GPL 3.0 licence.
█
█ Hans Deragon (hans@deragon.biz) owns the copyright of this work.
█
█ It is released under the GPL 3 licence which can be found at:
█
█     https://www.gnu.org/licenses/gpl-3.0.en.html
█
█ ─────────────────────────────────────────────────── Copyright Notice ─
